// <auto-generated/>
#nullable enable
using System;
using System.Threading;
using System.Threading.Tasks;
using FluentAssertions;
using Flurl.Http;
using Flurl.Http.Testing;
using Microsoft.Extensions.Logging.Abstractions;
using ApiConsoleClient.ApiClient;
using ApiConsoleClient.Models;
using Xunit;

namespace ApiConsoleClient.Tests.Generated;
public sealed class PostOrderWebshoporderidRmalinksTests
{
    [Fact]
    public async Task PostOrderWebshoporderidRmalinks_HappyPath()
    {
        using var http = new HttpTest();
        http.RespondWithJson(new { });
        var client = new ApiConsoleClient.ApiClient.ApiClient(new NullLogger<ApiConsoleClient.ApiClient.ApiClient>(), new ApiConsoleClient.ApiClient.ApiClientOptions { BaseUrl = new Uri("https://api.test") }, new ApiConsoleClient.Tests.NoAuth());
        var req = new PostOrderWebshoporderidRmalinksRequest { Webshoporderid = "x", Body = default! };
        var result = await client.PostOrderWebshoporderidRmalinksAsync(req, System.Threading.CancellationToken.None);
        http.ShouldHaveCalled("https://api.test/order/x/rmalinks").WithVerb(System.Net.Http.HttpMethod.Post);
    }
    [Fact]
    public async Task PostOrderWebshoporderidRmalinks_ErrorPath()
    {
        using var http = new HttpTest();
        http.RespondWith("{\"type\":\"https://example/problem\",\"title\":\"Bad Request\"}", 400, new System.Collections.Generic.Dictionary<string,string> { ["Content-Type"] = "application/problem+json" });
        var client = new ApiConsoleClient.ApiClient.ApiClient(new NullLogger<ApiConsoleClient.ApiClient.ApiClient>(), new ApiConsoleClient.ApiClient.ApiClientOptions { BaseUrl = new Uri("https://api.test") }, new ApiConsoleClient.Tests.NoAuth());
        var req = new PostOrderWebshoporderidRmalinksRequest { Webshoporderid = "x", Body = default! };
        var act = async () => await client.PostOrderWebshoporderidRmalinksAsync(req, System.Threading.CancellationToken.None);
        await act.Should().ThrowAsync<ApiConsoleClient.ApiClient.ApiException>();
    }
}

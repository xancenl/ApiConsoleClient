// <auto-generated/>
#nullable enable
using System; using System.Linq; using System.Threading; using System.Threading.Tasks; using System.Net.Http; using Flurl; using Flurl.Http; using System.Text.Json; using ApiConsoleClient.Models;
namespace ApiConsoleClient.ApiClient;
internal partial class ApiClient
{
    internal async Task<MontaRESTApiModels_Supplier_UpdateSupplier> PutSupplierSuppliercodeAsync(PutSupplierSuppliercodeRequest req, System.Threading.CancellationToken cancellationToken = default)
    {
        try
        {
            var path = "/supplier/{suppliercode}";
            var __val_Suppliercode = Convert.ToString(req.Suppliercode, System.Globalization.CultureInfo.InvariantCulture) ?? string.Empty;
            path = path.Replace("{suppliercode}", __val_Suppliercode);
            path = path.Replace("{Suppliercode}", __val_Suppliercode);
            var url = new Url(_options.BaseUrl).AppendPathSegment(path.TrimStart('/'), false);
            var flreq = CreateRequest(url);
            var q = new System.Collections.Generic.Dictionary<string, object?>();
            if (q.Count > 0) flreq = flreq.SetQueryParams(q, Flurl.NullValueHandling.Remove);
            var resp = await flreq.SendJsonAsync(new HttpMethod("PUT"), req.Body!, cancellationToken: cancellationToken).ConfigureAwait(false);
            return await ReadJsonAsync<MontaRESTApiModels_Supplier_UpdateSupplier>(resp).ConfigureAwait(false);
        }
        catch (FlurlHttpException ex)
        {
            throw await BuildApiExceptionAsync(ex).ConfigureAwait(false);
        }
    }
}

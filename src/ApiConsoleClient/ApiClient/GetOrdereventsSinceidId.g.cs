// <auto-generated/>
#nullable enable
using System; using System.Linq; using System.Threading; using System.Threading.Tasks; using System.Net.Http; using Flurl; using Flurl.Http; using System.Text.Json; using ApiConsoleClient.Models;
namespace ApiConsoleClient.ApiClient;
internal partial class ApiClient
{
    internal async Task<System.Collections.Generic.List<MontaRESTApiModels_Orders_Event>> GetOrdereventsSinceidIdAsync(GetOrdereventsSinceidIdRequest req, System.Threading.CancellationToken cancellationToken = default)
    {
        try
        {
            var path = "/orderevents/since_id/{id}";
            var __val_Id = Convert.ToString(req.Id, System.Globalization.CultureInfo.InvariantCulture) ?? string.Empty;
            path = path.Replace("{id}", __val_Id);
            path = path.Replace("{Id}", __val_Id);
            var url = new Url(_options.BaseUrl).AppendPathSegment(path.TrimStart('/'), false);
            var flreq = CreateRequest(url);
            var q = new System.Collections.Generic.Dictionary<string, object?>();
            if (req.IncludeWMSEvents is not null) q["includeWMSEvents"] = (Convert.ToString(req.IncludeWMSEvents) ?? string.Empty).ToLowerInvariant();
            if (q.Count > 0) flreq = flreq.SetQueryParams(q, Flurl.NullValueHandling.Remove);
            var resp = await flreq.SendAsync(new HttpMethod("GET"), null, completionOption: System.Net.Http.HttpCompletionOption.ResponseContentRead, cancellationToken: cancellationToken).ConfigureAwait(false);
            return await ReadJsonAsync<System.Collections.Generic.List<MontaRESTApiModels_Orders_Event>>(resp).ConfigureAwait(false);
        }
        catch (FlurlHttpException ex)
        {
            throw await BuildApiExceptionAsync(ex).ConfigureAwait(false);
        }
    }
}

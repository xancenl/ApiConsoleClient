// <auto-generated/>
#nullable enable
using System; using System.Linq; using System.Threading; using System.Threading.Tasks; using System.Net.Http; using Flurl; using Flurl.Http; using System.Text.Json; using ApiConsoleClient.Models;
namespace ApiConsoleClient.ApiClient;
internal partial class ApiClient
{
    internal async Task<MontaRestApiModels_Dto_ProductsDto> GetProductUpdatedsinceUpdatedSinceAsync(GetProductUpdatedsinceUpdatedSinceRequest req, System.Threading.CancellationToken cancellationToken = default)
    {
        try
        {
            var path = "/product/updated_since/{updatedSince}";
            var __val_UpdatedSince = req.UpdatedSince is null ? string.Empty : ((System.DateTimeOffset)req.UpdatedSince).ToString("yyyy-MM-ddTHH:mm:ssK", System.Globalization.CultureInfo.InvariantCulture);
            path = path.Replace("{updatedSince}", __val_UpdatedSince);
            path = path.Replace("{UpdatedSince}", __val_UpdatedSince);
            var url = new Url(_options.BaseUrl).AppendPathSegment(path.TrimStart('/'), false);
            var flreq = CreateRequest(url);
            var q = new System.Collections.Generic.Dictionary<string, object?>();
            if (q.Count > 0) flreq = flreq.SetQueryParams(q, Flurl.NullValueHandling.Remove);
            var resp = await flreq.SendAsync(new HttpMethod("GET"), null, completionOption: System.Net.Http.HttpCompletionOption.ResponseContentRead, cancellationToken: cancellationToken).ConfigureAwait(false);
            return await ReadJsonAsync<MontaRestApiModels_Dto_ProductsDto>(resp).ConfigureAwait(false);
        }
        catch (FlurlHttpException ex)
        {
            throw await BuildApiExceptionAsync(ex).ConfigureAwait(false);
        }
    }
}
